# ================================================================
# Event-like entities (i.e.: tracked over time)
# ================================================================
type Trade @entity {
  id: ID! # id is ACO_TOKEN_ADDR-TRADE_INDEX

  blockNumber: BigInt!
  timestamp: BigInt!

  amount: BigInt!   # Quantity of ACOToken bought or sold
  premium: BigInt!  # Premium paid (denominated in baseAsset)
  baseAsset: Asset! # Base Asset used to buy the option

  acoToken: ACOToken! @derivedFrom(field: "trades")
  acoPool: ACOPool @derivedFrom(field: "trades")    # Only set if trade was made with pool
}

type PoolDeposit @entity {
  id: ID! # id is POOL_ADDR-DEPOSIT_INDEX

  blockNumber: BigInt!
  timestamp: BigInt!

  account: String!            # Address of depositor
  shares: BigInt!             # Amount of pool shares minted
  collateralAmount: BigInt!   # Amount of collateral deposited

  pool: ACOPool! @derivedFrom(field: "deposits")
}

type PoolWithdraw @entity {
  id: ID! # id is POOL_ADDR-WITHDRAW_INDEX

  blockNumber: BigInt!
  timestamp: BigInt!

  account: String!            # Address of withdrawer
  shares: BigInt!             # Amount of pool shares burned
  underlyingAmount: BigInt!   # Amount of underlying withdrawn
  strikeAssetAmount: BigInt!  # Amount of strike asset withdrawn (i.e.: collected premiums)

  pool: ACOPool! @derivedFrom(field: "withdraws")
}

# ================================================================
# Assets and options
# ================================================================
type Asset @entity {
  id: ID! # id is token address, with 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee for ETH
  symbol: String!
  name: String!
  decimals: Int!

  options: [ACOToken!]! @derivedFrom(field: "underlying")
}

enum OptionType {
  PUT
  CALL
}

type ACOPool @entity {
  id: ID! # id is pool implementation address

  underlying: Asset!
  strikeAsset: Asset!
  type: OptionType!

  numDeposits: BigInt!
  deposits: [PoolDeposit!]!
  latestDeposit: PoolDeposit

  numWithdraws: BigInt!
  withdraws: [PoolWithdraw!]!
  latestWithdraw: PoolWithdraw

  numTrades: BigInt!
  trades: [Trade!]!
  latestTrade: Trade
}

type ACOToken @entity {
  id: ID! # id is ACO token address

  underlying: Asset!
  strikeAsset: Asset!

  decimals: Int!

  creationBlock: BigInt!
  creationTimestamp: BigInt!

  strike: BigInt!
  expiration: BigInt!
  type: OptionType!

  numTrades: BigInt!
  trades: [Trade!]!
  latestTrade: Trade
}

type ACOFactory @entity {
  id: ID! # id is factory proxy contract address

  numOptions: BigInt!
  options: [ACOToken!]!

  numAssets: BigInt!
  assets: [Asset!]!

  totalTradeVolume: BigInt!
}