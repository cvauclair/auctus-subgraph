// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class ACORedeem extends EthereumEvent {
  get params(): ACORedeem__Params {
    return new ACORedeem__Params(this);
  }
}

export class ACORedeem__Params {
  _event: ACORedeem;

  constructor(event: ACORedeem) {
    this._event = event;
  }

  get acoToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get valueSold(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralLocked(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get collateralRedeemed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Deposit extends EthereumEvent {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetBaseVolatility extends EthereumEvent {
  get params(): SetBaseVolatility__Params {
    return new SetBaseVolatility__Params(this);
  }
}

export class SetBaseVolatility__Params {
  _event: SetBaseVolatility;

  constructor(event: SetBaseVolatility) {
    this._event = event;
  }

  get oldBaseVolatility(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newBaseVolatility(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Swap extends EthereumEvent {
  get params(): Swap__Params {
    return new Swap__Params(this);
  }
}

export class Swap__Params {
  _event: Swap;

  constructor(event: Swap) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get acoToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get protocolFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get underlyingPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get volatility(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Withdraw extends EthereumEvent {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get noLocked(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get underlyingWithdrawn(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get strikeAssetWithdrawn(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get acos(): Array<Address> {
    return this._event.parameters[5].value.toAddressArray();
  }

  get acosAmount(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }
}

export class ACOPool extends SmartContract {
  static bind(address: Address): ACOPool {
    return new ACOPool("ACOPool", address);
  }
}
